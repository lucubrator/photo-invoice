@startuml
class Client {
- Long id
- String name
- String contactPerson
- String email
- String phone
+ Long getId()
+ void setId(Long)
+ String getName()
+ void setName(String)
+ String getContactPerson()
+ void setContactPerson(String)
+ String getEmail()
+ void setEmail(String)
+ String getPhone()
+ void setPhone(String)
}


interface ClientRepository {
}
class JobService {
- JobRepository jobRepository
- ClientRepository clientRepository
+ List<Job> getAllJobs()
+ Job saveJob(Job)
}


class Job {
- Long id
- Client client
- String address
- LocalDate bookingDate
- LocalDate photographyDate
- LocalDate deliveryDate
- Integer numberOfPhotos
- String editorNames
- Integer numberOfEditedPhotos
- Boolean isWeekendWork
- Boolean isNightWork
- Double carFee
- Double extraFee
- String status
+ Long getId()
+ void setId(Long)
+ Client getClient()
+ void setClient(Client)
+ String getAddress()
+ void setAddress(String)
+ LocalDate getBookingDate()
+ void setBookingDate(LocalDate)
+ LocalDate getPhotographyDate()
+ void setPhotographyDate(LocalDate)
+ LocalDate getDeliveryDate()
+ void setDeliveryDate(LocalDate)
+ Integer getNumberOfPhotos()
+ void setNumberOfPhotos(Integer)
+ String getEditorNames()
+ void setEditorNames(String)
+ Integer getNumberOfEditedPhotos()
+ void setNumberOfEditedPhotos(Integer)
+ Boolean getIsWeekendWork()
+ void setIsWeekendWork(Boolean)
+ Boolean getIsNightWork()
+ void setIsNightWork(Boolean)
+ Double getCarFee()
+ void setCarFee(Double)
+ Double getExtraFee()
+ void setExtraFee(Double)
+ String getStatus()
+ void setStatus(String)
}


enum JobStatus {
+  BOOKED
+  PHOTOS_TAKEN
+  PARTIALLY_EDITED
+  FINISHED
+  CANCELED
}

interface JobRepository {
}
class JobController {
- JobService jobService
+ List<Job> getAllJobs()
+ Job saveJob(Job)
}


class BackendApplication {
+ {static} void main(String[])
}

' Relationships
Job o-- Client : ManyToOne
JobService --> JobRepository
JobService --> ClientRepository
JobController --> JobService
ClientService --> ClientRepository
ClientController --> ClientService
Job *-- JobRepository
Client *-- ClientRepository

JpaRepository <|-- ClientRepository
JpaRepository <|-- JobRepository
@enduml